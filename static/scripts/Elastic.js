import{vec2AB as k,mag2 as A,norm2 as E,dot2 as m}from"./Vec2.js";import{FORMATED_VERSION as C}from"./env.js";import{Plot2 as b}from"./Plot2.js";const y=1152,D=4,M=10,U=.1,_=512;function p(a,s){return Math.random()*(s-a)+a}function F(a,s,t,n,o,e){const i=a-n,c=s-o;return i*i+c*c<(t+e)*(t+e)}function R(a,s,t,n,o){const e=a-t,i=s-n;return e*e+i*i<o*o}export class Elastic{constructor(s){this.entitiesCount=0,this.pauseUpdate=!1,this.selected=-1,this.radiuses=[],this.colors=[],this.positions=[],this.velocities=[],this.accelerations=[],this.masses=[],this.collidingPairs=[],this.plots=[],this.timeData={x:[],y:[]},this.mouse={x:0,y:0,isLeftDown:!1,isRightDown:!1,isLeftUp:!0,isRightUp:!0},this.prevMouse={...this.mouse},this.isPool=!1,this.isAdd=!1,this.isDelete=!1,this.drag=U,this.mFrameTime=0,this.frameTimes=[],this.lastTime=0,this.currentTime=0,this.animationID=-1,this.resolution=1,this.canvas=document.createElement("canvas"),this.canvas.style.width="100%",this.canvas.style.height="100%",s.appendChild(this.canvas);const t=this.canvas.getContext("2d");if(t)this.context=t;else throw new Error("Error creating 2D context");this.resize()}async start(){this.resize(),await this.init(),this.loop(-16)}async stop(){cancelAnimationFrame(this.animationID)}destroy(){this.deleteAllEntities(),this.plots=[],this.canvas.remove()}async init(){for(let s=0;s<y;s++){this.entitiesCount++,this.positions.push({x:Math.random()*this.width,y:Math.random()*this.height}),this.velocities.push({x:p(-1,1)*M,y:p(-1,1)*M}),this.accelerations.push({x:0,y:0});const t=Math.floor(p(5,16));this.radiuses.push(t),this.masses.push(t*t*Math.PI),this.colors.push("#ffffff")}this.plots.push(new b({x:0,y:this.height-300*devicePixelRatio},{x:600*devicePixelRatio,y:300*devicePixelRatio}))}update(s){if(this.collidingPairs=[],this.mouse.isLeftDown&&!this.prevMouse.isLeftDown){if(this.isAdd)this.addEntity(this.mouse.x,this.mouse.y);else for(let t=0;t<this.entitiesCount;t++){const{x:n,y:o}=this.positions[t];if(R(this.mouse.x,this.mouse.y,n,o,this.radiuses[t])){this.selected=t;break}else this.selected=-1}this.isDelete&&(this.deleteEntity(this.selected),this.selected=-1)}for(let t=0;t<this.entitiesCount&&!this.pauseUpdate;t++)this.accelerations[t].x=this.velocities[t].x*-this.drag,this.accelerations[t].y=this.velocities[t].y*-this.drag,this.velocities[t].x+=this.accelerations[t].x*s,this.velocities[t].y+=this.accelerations[t].y*s,this.positions[t].x+=this.velocities[t].x*s,this.positions[t].y+=this.velocities[t].y*s,this.positions[t].x-this.radiuses[t]<0&&(this.positions[t].x=this.width-this.radiuses[t]),this.positions[t].x+this.radiuses[t]>this.width&&(this.positions[t].x=this.radiuses[t]),this.positions[t].y-this.radiuses[t]<0&&(this.positions[t].y=this.height-this.radiuses[t]),this.positions[t].y+this.radiuses[t]>this.height&&(this.positions[t].y=this.radiuses[t]),this.velocities[t].x*this.velocities[t].x+this.velocities[t].y*this.velocities[t].y<.1&&(this.velocities[t].x=0,this.velocities[t].y=0);for(let t=0;t<this.entitiesCount;t++){const{x:n,y:o}=this.positions[t];for(let e=0;e<this.entitiesCount;e++){if(t===e)continue;const{x:i,y:c}=this.positions[e];if(F(n,o,this.radiuses[t],i,c,this.radiuses[e])){const h=A({x:i-n,y:c-o}),l=.5*(h-this.radiuses[t]-this.radiuses[e]);this.collidingPairs.push({first:t,second:e}),this.positions[t].x-=l*(n-i)/h,this.positions[t].y-=l*(o-c)/h,this.positions[e].x+=l*(n-i)/h,this.positions[e].y+=l*(o-c)/h}}}for(let t=0;t<this.collidingPairs.length;t++){const{first:n,second:o}=this.collidingPairs[t],e=this.positions[n],i=this.positions[o],c=k(e,i),h=E(c),l={x:-h.y,y:h.x},r=this.velocities[n],d=this.velocities[o],f=m(r,l),v=m(d,l),g=m(r,h),P=m(d,h),u=this.masses[n],x=this.masses[o],T=((u-x)*g+2*x*P)/(u+x),w=(2*u*g+(x-u)*P)/(u+x);r.x=l.x*f+h.x*T,r.y=l.y*f+h.y*T,d.x=l.x*v+h.x*w,d.y=l.y*v+h.y*w}if(this.selected!==-1&&this.mouse.isLeftDown&&!this.isPool)this.positions[this.selected].x=this.mouse.x,this.positions[this.selected].y=this.mouse.y;else if(this.selected!==-1&&this.mouse.isLeftUp&&this.isPool){const{x:t,y:n}=this.positions[this.selected],o=t-this.mouse.x,e=n-this.mouse.y;this.velocities[this.selected].x=o,this.velocities[this.selected].y=e,this.selected=-1}this.resize(),this.frameTimes.length>=D?(this.mFrameTime=this.frameTimes.reduce((t,n)=>t+n,0)/D,this.frameTimes=[]):this.frameTimes.push(s),this.prevMouse={...this.mouse}}draw(s){this.context.clearRect(0,0,this.width,this.height);for(let i=0;i<this.entitiesCount;i++){const{x:c,y:h}=this.positions[i],l=this.radiuses[i];this.context.beginPath(),this.context.arc(c,h,l,0,2*Math.PI),R(this.mouse.x,this.mouse.y,c,h,l)?this.context.strokeStyle="#ff0080":this.selected===i?this.context.strokeStyle="#00ff00":this.context.strokeStyle=this.colors[i],this.context.stroke(),this.context.closePath(),this.context.beginPath(),this.context.strokeStyle="#00ff99",this.context.moveTo(c,h),this.context.lineTo(c+this.velocities[i].x*s*this.radiuses[i],h+this.velocities[i].y*s*this.radiuses[i]),this.context.stroke(),this.context.closePath()}for(let i=0;i<this.collidingPairs.length;i++){const{first:c,second:h}=this.collidingPairs[i],{x:l,y:r}=this.positions[c],{x:d,y:f}=this.positions[h];this.context.beginPath(),this.context.moveTo(l,r),this.context.lineTo(d,f),this.context.strokeStyle="#ff8c00",this.context.stroke(),this.context.closePath()}if(this.selected!==-1&&this.mouse.isLeftDown&&this.isPool){const{x:i,y:c}=this.positions[this.selected];this.context.beginPath(),this.context.moveTo(i,c),this.context.lineTo(this.mouse.x,this.mouse.y),this.context.strokeStyle="#ff1c42",this.context.stroke(),this.context.closePath()}const t=this.masses.reduce((i,c,h)=>i+c*this.velocities[h].x,0),n=this.masses.reduce((i,c,h)=>i+c*this.velocities[h].y,0);this.context.fillStyle="white";const o=12*devicePixelRatio,e=10*devicePixelRatio;this.context.font=`${o}px 'Roboto Mono', monospace`,this.context.fillText(`${this.mFrameTime.toFixed(3)} ms, ${(1/this.mFrameTime).toFixed(1)} fps`,e,o*1+10),this.context.fillText(`sim: ${this.pauseUpdate?"pause":"play"} (space)`,e,o*2+10),this.context.fillText(`mode: ${this.isPool?"pool":"move"} (p)`,e,o*3+10),this.context.fillText(`momentum: ${Math.abs(t+n).toFixed(2)} kg\u2219m/s (z: zero)`,e,o*4+10),this.context.fillText(`drag: ${this.drag.toFixed(2)} (+/-)`,e,o*5+10),this.context.fillText(`entities: ${this.entitiesCount} (0: delete all)`,e,o*6+10),this.context.fillStyle="lightgray",this.context.fillText("hold e + mouse click to add entity",e,o*7+10),this.context.fillText("hold d + mouse click to delete entity",e,o*8+10),this.context.fillText(C,e,this.height-10)}loop(s){this.currentTime=s;const t=(this.currentTime-this.lastTime)/1e3;this.update(t),this.draw(t),this.lastTime=this.currentTime,this.animationID=requestAnimationFrame(this.loop.bind(this))}get width(){return this.canvas.width}get height(){return this.canvas.height}get ratio(){return this.canvas.width/this.canvas.height}onMouseMove(s){this.mouse.x=s.clientX*devicePixelRatio,this.mouse.y=s.clientY*devicePixelRatio}onMouseDown(s){this.mouse.x=s.clientX*devicePixelRatio,this.mouse.y=s.clientY*devicePixelRatio,s.button===0&&(this.mouse.isLeftDown=!0,this.mouse.isLeftUp=!1),s.button===2&&(this.mouse.isRightDown=!0,this.mouse.isRightUp=!1)}onMouseUp(s){this.mouse.x=s.clientX*devicePixelRatio,this.mouse.y=s.clientY*devicePixelRatio,s.button===0&&(this.mouse.isLeftDown=!1,this.mouse.isLeftUp=!0),s.button===2&&(this.mouse.isRightDown=!1,this.mouse.isRightUp=!0)}onContextMenu(s){s.preventDefault()}onKeyDown(s){s.key==="e"?this.isAdd=!0:s.key==="d"&&(this.isDelete=!0)}onKeyUp(s){if(s.key==="z")for(let t=0;t<y;t++)this.velocities[t].x=0,this.velocities[t].y=0,this.accelerations[t].x=0,this.accelerations[t].y=0;s.key==="e"?this.isAdd=!1:s.key==="d"&&(this.isDelete=!1)}onKeyPress(s){s.key===" "&&(this.pauseUpdate=!this.pauseUpdate),s.key==="p"&&(this.isPool=!this.isPool,this.selected=-1),s.key==="+"?(this.drag+=.01,this.drag>=1&&(this.drag=1)):s.key==="-"&&(this.drag-=.01,this.drag<=0&&(this.drag=0)),s.key==="0"&&this.deleteAllEntities()}addEntity(s,t){if(this.entitiesCount>=y)return;this.positions.push({x:s,y:t}),this.velocities.push({x:0,y:0}),this.accelerations.push({x:0,y:0});const n=p(5,25);this.radiuses.push(n),this.masses.push(n*n*Math.PI),this.colors.push("white"),this.entitiesCount++}deleteEntity(s){s>-1&&s<this.entitiesCount&&(this.positions.splice(s,1),this.velocities.splice(s,1),this.accelerations.splice(s,1),this.radiuses.splice(s,1),this.masses.splice(s,1),this.colors.splice(s,1),this.entitiesCount--)}deleteAllEntities(){this.positions=[],this.velocities=[],this.accelerations=[],this.radiuses=[],this.masses=[],this.colors=[],this.entitiesCount=0}resize(){const s=Math.round(this.canvas.clientWidth*devicePixelRatio*this.resolution),t=Math.round(this.canvas.clientHeight*devicePixelRatio*this.resolution);(this.width!=s||this.height!=t)&&(this.canvas.width=s,this.canvas.height=t)}}
